# Default values for kube-xray.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: _update_with_real_repo_/kube-xray
  tag: latest
  pullPolicy: Always

# Set the Xray config file, it sets access to Xray instance
# The key must be encoded with base64
# e.g. `cat xray_config.yaml | base64 -w 0`
# It is only used if no existing secret is specified
xrayConfig: ""

# Specify an existing secret holding the Xray config
existingSecret: ""

# Set kube-xray scannig policy
scanPolicy:
  unscanned:
    # Set for unscanned deployments delete/scaledown/ignore
    deployments: ignore
    # Set for unscanned statefulsets delete/scaledown/ignore
    statefulSets: ignore
    # Whitelist namespaces
    whiltelistNamespaces: "kube-system,kube-xray"
  security:
    # Set for deployments with security issues delete/scaledown/ignore
    deployments: ignore
    # Set for statefulsets with security issues delete/scaledown/ignore
    statefulSets: ignore
  license:
    # Set for deployments with license issues delete/scaledown/ignore
    deployments: ignore
    # Set for statefulsets with license issues delete/scaledown/ignore
    statefulSets: ignore

# Set which user:group you want kube-xray to be run with
# kube-xray docker image already comes preset with rootless user
securityContext:
  enabled: false
  kubeXrayUserId: 1000
  kubeXrayGroupId: 1000

service:
  type: ClusterIP
  port: 80

# Webhook REST API ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/force-ssl-redirect: "true"
    # certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"

  path: /
  hosts:
    - kube-xray.example.com
  tls: []
  #  - secretName: kube-xray.example.com
  #    hosts:
  #      - kube-xray.example.com

# Set livenessProbe
# livenessProbe:
#   httpGet:
#     path: /
#     port: http

# Set readinessProbe
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# Set resources
resources:
  limits:
    cpu: 256m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# RBAC manifests management
rbac:
  enabled: true

# 
nodeSelector: {}

tolerations: []

affinity: {}

# Enable and set Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
  minAvailable: null
